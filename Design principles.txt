Window is composed from 3 main parts:
 - Content area
 - Title bar area
 - 




Window concepts:

FRAMERATE/TICKRATE:
 - The window is rendered using direct2D which draws to a swap chain
 - If the window redraws its content every frame, the framerate is either locked to the screen refresh rate or uncapped, depending on the sync interval option in `Present`
 - The update function is called after every swap chain swap
 - If the window content is not redrawn after an update-draw cycle, the UI thread sleeps for a small amount which, due to thread scheduling, results in a random update function call interval




LAYERED WINDOW SIZE/REDRAW SYNCHRONIZATION:
 - When calling UpdateLayeredWindowIndirect, the DC and window must be the exact same size
 - Since UpdateLayeredWindowIndirect is called in the UI thread and window size is updated in the Message thread, unexpected bugs can arise

 - Simple implementation:
  UI thread:
   - Lock back buffer size
   - Render
   - Unlock back buffer size
  Message thread:
   - OS resizes the window
   - Receive WM_SIZE message
   - Lock back buffer
   - Resize back buffer
   - Unlock back buffer

 - This works for non-layered windows, as their content is updated by the OS after presenting the back buffer and size mismatch just results in some stretching
 - For layered windows the window content must be updated manually using UpdateLWI which requires window size and back buffer size to match exactly
 - For this we must be able to control when the OS performs window resizing, which can be done by handling the WM_WINDOWPOSCHANGING message which is sent right before resizing the window
 
 - Advanced implementation:
  UI thread:
   - Lock back buffer size
   - Render
   - Unlock back buffer size
  Message thread:
   - Receive WM_WINDOWPOSCHANGING message
   - Lock back buffer
   - OS resizes the window
   - Receive WM_SIZE message
   - Resize back buffer
   - Unlock back buffer
  

UI thread:
 - Lock window size
 - Get size from last WM_SIZE message
 - If size changed, swap chain is resized, then all scenes are resized
 - If redraw is required:
   - Redraw content
   - Update layered window
     - DC is initialized with swapchain content
     - Window size and position is updated with values from GetWindowRect
     - UpdateLayeredWindowIndirect is called
   - Call swapchain present to sync to monitor refresh rate
 - Unlock window size

Message thread:
 - Receive WINDOWPOSCHANGING message
 - Lock window size
 - Lock message size
 - Unlock window size
 - Window is resized by the OS
 - Receive WM_SIZE
 - Unlock message size

